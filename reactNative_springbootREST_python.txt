<React-Native>

1. node.js 설치(npm 포함됨)
2. git 설치(다른사람의 React-Native 프로젝트를 받아오기 위해)

3. npm install (Maven에서 repository 받아오는 것과 같은 기능)
	- 설치 결과를 package.json 파일에서 확인 가능
4. react-native init <프로젝트명> : React-Native 프로젝트 생성
5. react-native link : 프로젝트에서 사용할 리소스를 링크로 받아온다.
6. react-native run-android / run-ios : 시뮬레이터를 실행하여 앱 띄운다.
7. 

<React - Redux>
: 앱의 효율적인 데이터 교류를 위해서 MVC패턴이 아닌 Flux패턴

예> 새로온 메일 갯수가 앱뷰 화면에 3군데에 표시. 한군데에서 메일을 모두 확인하여 새로온 메일 갯수 0으로 수정. 나머지 두군데는??? 이게 짜증나서 Redux 만듬.

- MVC패턴 : Action -> Controller -> Model N개 -> View N개 엄청복잡해짐. 무한루프가 생길수도. 그걸 발견하기도 힘듬

- FLUX패턴 : Action -> Dispatcher -> Store -> View
Action을 받을때 마다 Dispatcher가 Action을 통제하여 Store에 있는 데이터를 업데이트하여 실시간 현황을 반영하고 View를 Rerender 해준다. View에서 Dispatcher로 Action을 보낼 수도 있다. Dispatcher가 작업이 중첩되지 않도록 통제한다.

- Redux : Store 중간자를 통해서 데이터를 업데이트하고 연관된 컴포넌트에 subscribe(반영) 하는 패턴
3가지 원칙
1. Single Source of Truth : 단 1개의 Store만 사용하여 데이터를 한곳에서 관리
2. State is read-only : Application에서 state를 직접 변경할 수 없다. Action에 의한 통제된 절차에 의해서만 state가 변경된다.
3. Changes are made with Pure Functions : Action을 처리하는 함수(=Reducer)의 기능은 전달받은 parameter만 가지고 계산되고 처리된 결과값을 리턴해야한다. 그외의 외부네트워크 혹은 API 등의 변수가 포함되선 안된다.

---------------------------------------------------------------------------------------------------------------

<Spring Boot Data REST API>
1. 특징
	- Repository Interface 정의만으로 REST API 제공
	- Query Method : 메소드 선언으로 검색 API 지원
	- Projection : 데이터 표현 방식을 다양하게 정의 표현 가능
	- HATEOAS : MetaData 표현 (Model, Link, Resource) Responsbody로 표현가능
	
2. Spring Data에서 제공 하는 Interface만으로 DB접근 구현체를 직접작성하지 않고 사용 가능

3. JPA, MongoDB, Redis, Solar, xxxxx 5개 제공

4. 

---------------------------------------------------------------------------------------------------------------

<Python>

2017-09-28(목)
1. 자료형
	- 정수, 실수 등등 숫자형
	- 문자형
2. 사칙연산 가능
	+, - , *, /(나누기), %(나머지), **(제곱), //(나머지를 뺀값)
3. type({변수명}) : 변수의 타입을 보여줌
4. 함수
def 지우기():
	print("\n"*100)
지우기()
5. 변수.내장함수() 있음
6. List : 추가 수정 삭제 자르기 나누기 정렬 등등 가능
	list = ["바보", "사람", "파이썬"]
	
7. Tuple : 한번 초기화하면 수정, 삭제 불가
	tuple = ("바보")

8. 제어문 if
