<Web Developer>
	<Skill Level>
		0 : 사용안함 // 1 : 하 // 2 : 중 // 3 : 상
	<Common>
		Git & GitHub(2)
		SVN(2)
		SourceTree(1)
		
		Maven(2)
		Gradle(0)

		SSH(1)
		HTTP/HTTPS(1)

		Terminal(Windows, Linux)(2)
		vim(1)

		자료구조
		알고리즘
		(디자인패턴)

		문자인코딩
		(정규식)

	<Front-End>
		HTML(2)
		CSS(1)
		Javascript(2)
		(JQuery)(2)
		
		Javascript 오픈소스 활용
			D3.js(정보시각화)
			OpenLayers(지도데이터 표시)
			Google Chart
			JQuery-UI
			.....
		
		JSP(.jsp)
		Velocity(.vm)
		Thymeleaf(.html)

		React(0)
		Vue(0)
		Angular(1)
		Bootstrap(2)
		
		JQuery-Ajax

	<Back-End>
		Java(2)
		Python(1)

		Spring Framework(2)

		Oracle(2)
		MySQL(2)
		PostgreSQL(2)
		MongoDB(1)

		Apache(2)
		Tomcat(2)
		Nginx(2)

		Memcached(1)
		Redis(1)

		OAuth(1)
		Basic Authentication(1)
		Token Authentication(1)
		JWT(3)

		ElasticSearch(0)

	<Dev-Ops>
		Linux-CentOS
		AWS

		Shell

		Jenkins

		Zabbix

		ELK(로그분석)

		Docker

		Apache
		Tomcat
		Nginx

		Terminal Command
		문자다루기 : awk, sed, grep, sort, uniq, cat, cut, echo, fmt, tr, nl, egrep, fgrep, wc .....
		프로세스모니터링 : ps, top, htop, atop .....
		시스템성능 : nmon, iostat, sar, vmstat .....
		네트워크 : nmap, tcpdump, ping, mtr, traceroute, airmon, airodump .....
		

<검색엔진에서 노출되지 않도록 설정>
1. 웹 루트 최상위 디렉토리에 robots.txt 파일 설정 
<robots.txt>
User-agent: *
Disallow: /

2. 검색엔진 웹 마스터 도구에 노출되지 않도록 등록

<앱 Push>

<Spring Boot Batch>

<JWT>

<Facebook, Twitter, Naver, Kakao Login API>

<안드로이드 TV>


-------------------------------------------------
이력서

업무적 강점(=이해 역량, 경력, 능력 3~5줄)
1. 객체지향 설계와 웹 개발에 대한 이해
2. 다수의 웹 개발 프로젝트 경험
3. 팀에 필요한 역할을 충실히 이행하는 책임감과 협업능력

기술요약(=할수있는 핵심 기술, 1~3줄)
1. 웹 어플리케이션 : 프론트, 백엔드에 대한 설계, 개발 및 웹 서비스 구성
2. 클라우드 : AWS, Google App Engine을 이용한 시스템 구성
3. 오픈소스 활용 : 자체 Framework 구성, Javascript 라이브러리 커스트마이징

자기소개서(연봉, 수치, % 같은 정확한 수치, 개발업무내용만 / 전공 경력계발 / 특기사항 / 전문가적 기질, 업무적 특징 / 비전 / 희망사항)
1. 클라우드 객체지향 시스템의 전문가가 되고 싶다.
	다양한 요구를 충족시킬 줄 아는 웹 개발 전문가가 되고 싶습니다.
	
2. 기존 웹 어플리케이션 개발에 대한 다양한 경험. 프론트엔드, 백엔드, DB, Server 등등에 대한 이해과 기술
	GIS(지리정보시스템), 미디어, 네트워크통신 등 다양한 분야의 웹 개발 프로젝트를 수행했습니다.
	Spring Framework, 오픈소스 활용하여 에 대한 분석과 커스터마이징을 통해 객체지향 프로그래밍에 대한 이해도를 향상.
	안정성, 쉬운 학습난이도, 커뮤니티 혹은 단체 지원의 유무, 가볍고 최적화된 성능, 호환성, 확장성 등을 고려한 기능에 알맞는 프레임워크 선택으로 성공적인 프로젝트를 진행하려고 노력했습니다.
	단순 반복 질의가 필요한 기능에는 NoSQL DB를 적용, Join이 많은 복잡한 질의가 필요한 기능에는 RDBMS를 적용하여 시스템을 구성
	서비스 규모가 커지면서 배포관리의 어려움, 잦은 소스 수정의 어려움등 중앙처리 시스템의 한계에 부딪혔습니다.
	
3. 자발적인 궁금함에 대한 클라우드 공부 및 실습
	이를 극복할 수 있는 방법으로 분산 시스템 + 클라우드의 조합을 사용한 넷플릭스에 대해 듣게 되었습니다.
	Spring Boot, AWS, Google App Engine, Docker, 넷플릭스 오픈소스 등 효과적인 분산 시스템 개발 도구를 이용하여 안전하고 빠르게 분산 시스템 구축
	
4. 2 + 3 = 클라우드 분산 시스템의 실현 = 회사에 필요로하는 점
	위의 분산 시스템 구축 기술을 통해 고품질의 웹 서비스를 제공하여 회사에 큰 이익을 가져다 줄것으로 생각합니다.
	
5. 4번을 이행하여 회사에 큰 이익을 가져다줄 결정적 시스템 개발에 주력이 되고 싶다.
	이를 주도하는 개발자 일원이 되고자 합니다.
	
6. 나아가 테스트, 배포, 코딩규칙 등 여러가지 개발환경의 자동화 및 성능 향상을 이루고 싶다.
	더 나아가 개발조직의 발전에 이바지하여 추후 프로젝트의 빠르고 안전하여 효율적인 성공을 이루고 싶습니다.
	
7. 4번의 시스템과 6번의 내실의 기반으로 회사의 아이디어의 가치있는 현실화가 목표다


Skill
1. AWS(2)
2. Google App Engine(2)
