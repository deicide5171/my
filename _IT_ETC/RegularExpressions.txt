<정규표현식 Regular Expressions>
- http://zvon.org/comp/r/tut-Regexp.html#Pages~Contents : Regular Expressions Tutorial
- https://regexr.com/ : Regular Expressions Test 

1. 특정 단어(Text)
2. 위치와 이스케이핑    ^ : 캐럿	//	$ : 달러	//	\ : 역슬래쉬
	^who -> 'who' is who // asdf who is who(검색안됨)	: 문장 처음 텍스트 who만 찾는다.
	$who -> who is 'who' // who is who asdf(검색안됨)	: 문장 마지막 텍스트 who만 찾는다.
	escape : ^, $, \ 같은 특수문자를 단순문자로 인식해서 찾으려면 \(back slash)를 앞에 붙여서 사용한다.(= 기존 특수문자 역할을 탈출하여 단순문자로 처리한다.) => \^, \$, \\
3. 모든 문자
	"." : any character(아무 문자)
	"....." : 5개의 아무 문자로 이루어진 덩어리들만 검색. 문장을 5개의 문자로 끊어서 검색하다가 마지막 남은 문자가 5개 미만이면 그부분만 검색안됨.
	"\." : 단순문자 .
4. 특정 문자 [] : brackets(대괄호)
	[oyu] : o, y, u 중 하나라도 매칭되는 1개의 문자 찾기
	[dH]. : d, H 중 하나라도 매칭되는 1개의 문자 + 아무 1개의 문자. 즉 2개가 매칭되는 2자리 문자 찾기
	[owy][yow] : o, w, y 중 하나. y, o, w 중 하나. 매칭되는 2자리 문자 찾기
	range : - 기호 사용
		[C-K] : 대문자 C부터 K까지 포함되는 1개의 문자 찾기
		[a-d] : 소문자 a부터 d까지 포함되는 1개의 문자 찾기
		[2-6] : 숫자 2부터 6까지 포함되는 1개의 문자 찾기
		[C-Ka-d2-6] : 대문자 C부터 K, 소문자 a부터 d, 숫자 2부터 6까지ㅏ 포함되는 1개의 문자 찾기
		[^CDghi45] : 대괄호 안의 ^은 not을 의미한다. 따라서 C,D,g,h,i,4,5에 해당하지 않는 1개의 문자 찾기
		[^W-Z] : W부터 Z가 아닌 1개의 문자 찾기
5. subpattern () : 소괄호 사용 // | : 파이프(또는)
	(on|ues|frida) : on, ues, frida 모두 검색
	(Mon|Tues|Fri)day : Monday, Tuesday, Friday 모두 검색
	..(id|esd|nd)ay : 아무문자2개 + id 또는 esd 또는 nd + ay 문자 검색
6. 수량자(Quantifiers) * : 스타 // + : 플러스 // ? : 물음표
	* : 0~n개 // + : 1~n개 // ? : 0~1개
	a*b : a가 0~n개 + b인 모든 단어 검색	ab, aab, aaab, a....b, b 모두 포함
	a+b : a가 1~n개 + b인 모든 단어 검색	ab, aab, aaab, a....b
	a?b : a가 0~1개 + b인 모든 단어 검색	b, ab
	
	.* : 모든 텍스트
	-A*- : - + A가 0~n개 + - 인 모든 단어 검색	--, -A....A-
	[-@]* : - 또는 @ 1개 문자가 0~n개인 모든 단어 검색
	\*+ : *가 1~n개인 모든 문자 검색
	-@+- : - + @가 1~n개 + - 인 문자 검색
	[^ ]+ : 공백이 아닌것이 1개 이상인 모든 문자 검색 = 1칸짜리 공백제거
	-X?XX?X : -XX -XXX -XXXX
	-@?@?@?- : -- -@- -@@- -@@@-
	[^@]@?@ : @아닌 문자1개 + @     @아닌 문자1개 + @@
	
	{m} : m번 매칭
	{m,n} : 최소 m번, 최대 n번 매칭
	{m,} : 최소 m번 이상
	{,n}은 없음!!!
	
	* = {0,}
	+ = {1,}
	? = {0,1}

	r.* : r로 시작되는 아무문자 전부
	r.*? : r + 아무 문자 0~n개에서 가장 작은 수 0개 = r만 검색
		*? : 0~n에서 가장 작은 수 = 0 // 수량자 + 수량자는 기존 수량자 의미를 바꿈.
	r.+ : r + 아무문자 1개이상
	r.+? : r + 아무 문자 1~n개에서 가장 작은 수 1개 = r + 아무문자 1개만 검색
		+? : 1~n에서 가장 작은 수 = 1 // 수량자 + 수량자는 기존 수량자 의미를 바꿈.
	r.? : r + 아무 문자 0~1개
	r.?? : r + 아무 문자 0~1개에서 가장 작은 수 0개
	
	ex>
	정규식 : <div>.+</div>		greedy(탐욕적)
	결과 : "<div>test</div><div>test2</div>"   전체가 검색됨.. <div>..</div> 만 검색하고 싶은데 그렇게 안됨.
	해결 정규식 : <div>.+?</div>	lazy(게으른)
	결과 : "<div>test</div>", "<div>test2</div>" 그렇게 안됨.
7. Character Classes
	\w : word (알파벳, 숫자, "_")						=  [A-z0-9_]
	\W : any non-word(알파벳, 숫자, "_" 가 아닌 문자)   =  [^A-z0-9_]
	\s : space, new line and tab(" ", "\n", "	")
	\S : any non-whitespace
	\d : any digit										=  [0-9]
	\D : not digit
	\b\w : 단어 앞에 경계가 있는 문자
	\w\b : 단어 뒤에 경계가 있는 문자
	\b\w+\b : 1글자 이상인 모든 단어 검색
	\B. : 단어 앞에 경계가 없는 문자
	.\B : 단어 뒤에 경계가 없는 문자
	\A... : \A (문장 시작 경계) + 문자 3개
	...\Z : 문자 3개 + \Z (문장 마지막 경계)
	
	^은 행마다 첫번째 문자 모두 선택
	\A는 모든 행 통틀어서 첫번째 문자 선택
	$는 행마다 마지막 문자 모두 선택
	\Z는 모든 행 통틀어서 마지막 문자 선택
8. Assertions		(?=<pattern>)
	\w+(?=X) : 아무 문자 1~n개 + X 문자 선택후 X는 선택에서 제외
	\w+(?!X) : 아무 문자 1~n개 + X 가 아닌 문자 선택후 X는 선택에서 제외
	
	