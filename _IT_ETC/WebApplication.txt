<웹 애플리케이션 만들기>
1. 기획(계획) // 기획자 : 웹 어플리케이션 구상
2. 디자인 // 웹 디자이너 : 웹 사이트 꾸미기, 이용자의 편의성 인터페이스 구성
3. 개발(Development) // 개발자 : 서비스 기능 구현
4. 테스트 // QA : 품질보증, 버그발견, 부족한부분
5. 1~4번 과정 반복을 통한 웹 애플리케이션 업그레이드 => *Start Small : 작게 만들어서 끊임없이 반복하여 향상
6. 작고 완성도 높게 빠르게 만들어야 프로젝트 성공률 높다.
7. 복잡도 : 체크박스 50개면 천조번 테스트 필요 (2의 50승)

1. 구상 : 무엇을 만들 것인가? // 사이트 구축시 목적확인, 그에 맞는 형태 결정
	- 블로그 : 최신순 정렬
	- 학습 : 오래된 순 정렬

1. 기획 : 어떻게 동작해야 하는가?
2. UI 모델링(화면구상)
	- UI(User Interface) :  사용자가 시스템을 제어하는 조작장치
	- UI 모델링 : 사용자의 입장에서 동작하는 기능을 가상으로 만들어보기
	- 개발자, 고객, 사용자와의 커뮤니케이션을 통한 화면, 기능 조율 및 공유
3. 사이트 화면 구상 : 메뉴, 버튼, 텍스트박스, 체크박스 등등
4. 사이트 화면에 맞는 기능
5. 모델링 도구
	- 손그림 : 간단한 화면
	- Pencil(http://pencil.evolus.vn/ , http://opentutorials.org/course/221/1416) : 오픈소스 모델링 도구
	- balsamiq(https://balsamiq.com) : 유료 모델링 도구
	- PowerPoint : 기획자들이 가장 많이 사용하는 도구

1. 인터넷과 웹의 역사 : 인터넷안에 웹이 포함되어 있음.
	- 인터넷 : 아래 내용들을 모두 포함. 네트워크를 통해 컴퓨터들이 연결되어 데이터를 주고 받을 수 있는 형태
	- 웹 : 웹브라우저, 웹서버 // HTTP URL 요청결과로 페이지(HTML) 응답하는 서비스 (팀버너스리 : 웹창시자)
	- FTP : 파일 업로드 // 다운로드 서비스
	- 이메일 : 데이터(문자+파일) 발송 // 수신 서비스

1. Client - Server (CS)
	- 웹브라우저(Client) <-> 웹서버(Server)
	- 요청 <-> 응답
	- 주고받는 대상 : HTML
2. 웹서버 : apache, nginx, iis
3. bitnami : 웹서버 설치 및 관리 도우미

1. HTML 웹페이지 개발 도구 : Aptana
2. CSS : 웹페이지 꾸미기






