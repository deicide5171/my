- JMeter
		- 오픈소스 소프트웨어
		- 순수 Java Application
		- Function Load 테스트, 성능 테스트
		- 2.13(Java 7), 3.3(Java 8) // Java 9 이상 지원은 확인 필요함.
		- Test Plan > Thread Group(하나의 테스트 케이스) > Sampler(하나의 작은 작업 단위)
		- Thread Group
			- Action to be taken after a Sampler error : 테스트 도중 오류가 발생 했을 경우, 동작 설정 (Continue, Start Next Thread Loop, Stop Thread, Stop Test, Stop Test Now)
			- Thread Properties
				- Number of Threads(users) : 스레드 갯수(=사용자 수)
				- Ramp-Up Period(in seconds) : 반복 주기(단위 : 초)
				- Loop Count : 반복 횟수(Forever 옵션)
					* Ramp-Up Period = 10, Loop Count = 10  ==>>  10초에 1번씩 10번 테스트 (=100초)
				- Delay Thread creation until needed : 스레드 생성이 필요할 때까지 기다린다. 끄면 반응성은 더 좋아지긴하지만 안정성 때문에 켜놓는다.
				- Scheduler : 스케줄러 사용 여부
			- Scheduler Configuration
				- Duration(seconds) : 동작시간
				- Startup delay(seconds) : 시작 지연시간 (Thread Group을 여러개 돌릴 때, 서로 차등을 주어 실행시킬 수 있다.)
		- HTTP Header Manager, HTTP Cookie Manager, Once Only Controller 등을 추가하여 실제 테스트 환경과 동일하게 맞춰서 설정 가능
		- Sampler (HTTP Request 항목을 많이 사용함)
			- 명칭, IP, Port, Method(GET, POST), Path, Parameters
		- Listener
			- View Results Tree : Response 결과도 확인 할 수 있다. 만약 Response data가 빈 화면으로 나오면 jmeter.properties -> jmeter.save.saveservice.response_data = true, jmeter.save.saveservice.samplerData = true 옵션 켜야함.
			- Summary Report : Label(HTTP Request 명칭), # Samples(요청 횟수), Average(평균 응답시간ms), Min(최소 응답시간ms), Max(최대 응답시간ms), error(에러율) 등등
			- Response Time Graph : 그래프 결과
			- 그 외 그래프 : 라이브러리를 추가하여 사용한다.
			
			
<한재성 책임님 JMeter 설정>
remote 사용 시 
	PC 및 Server 모두 jmeter.properties 內 "server.rmi.ssl.disable=true" 활성화
	PC의 jmeter.properties 내 아래 사항 명기  
		remote 서버 기재
			ex. remote_hosts=172.16.231.86,172.16.231.83,172.16.231.76,172.16.231.74,172.16.231.77,172.16.231.70
		server_port 설정 (Default : 1099)
		client.rmi.localport=1099
		server.rmi.port=1099
		server.rmi.localport=1099
	remote 서버의 jmeter.properties 內 아래 사항 명기 
		server_port 설정 (Default : 1099)
		client.rmi.localport=1099
		server.rmi.localport=1099
	remote 서버는 /bin/jmeter-server 실행